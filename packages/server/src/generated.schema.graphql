type Form {
  _id: ID!
  questions: [Question!]!
  title: String!
}

input FormInput {
  title: String!
}

type Mutation {
  createForm(form: FormInput!): Form
  createQuestion(formId: ID!, question: QuestionInput!): Question
  updateForm(form: FormInput!, formId: ID!): Form
  updateQuestion(
    formId: ID!
    question: QuestionInput!
    questionId: ID!
  ): Question
}

type Query {
  form(id: ID!): Form
  forms: [Form!]!
}

interface Question {
  _id: ID!
  text: String!
}

input QuestionInput {
  select: SelectQuestionInput
  text: TextQuestionInput
}

type SelectQuestion implements Question {
  _id: ID!
  multiSelect: Boolean!
  options: [String!]!
  text: String!
}

input SelectQuestionInput {
  multiSelect: Boolean!
  options: [String!]!
  text: String!
}

type TextQuestion implements Question {
  _id: ID!
  text: String!
}

input TextQuestionInput {
  text: String!
}
